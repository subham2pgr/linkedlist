
/*
Given a singly linked list and a key, count number of occurrences of given key in linked list. For example, if given linked list is 1->2->1->2->1->3->1 and given key is 1, then output should be 4.
*/
#include <bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
};

int count(Node* head,int search_data)
{
    int count=0;
    Node* current=head;
    while(current!=NULL)
    {
        if(current->data==search_data)
        {
            count++;
        }
        current=current->next;
    }
    return count;
}
void push( Node **head_ref,int key)
{
     Node* newNode=new Node();
    newNode->data=key;
    newNode->next=(*head_ref);
    (*head_ref)=newNode;
}
int main()
{
     Node *head=NULL;
    /* Use push() to construct below list  
    1->2->1->3->1 */
    push(&head, 1); 
    push(&head, 3); 
    push(&head, 1); 
    push(&head, 2); 
    push(&head, 1); 
  
    /* Check the count function */
    cout << "count of 1 is " << count(head, 1); 
    return 0; 

    
}
